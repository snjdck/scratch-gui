const Cast = require('../util/cast');

function event_broadcast({BROADCAST_OPTION}){
	const {runtime, target} = this.userData;
	BROADCAST_OPTION = Cast.toString(BROADCAST_OPTION);
	return runtime.startHats('event_whenbroadcastreceived', {BROADCAST_OPTION});
}

function event_broadcastandwait(args){
	const threadList = event_broadcast.call(this, args);
	if(threadList.length == 0){
		return;
	}
	return new Promise(resolve => {
		this.suspendUpdater = () => {
			if(threadList.every(thread => thread.isFinish())){
				resolve();
			}
		};
	});
}

module.exports = {
	event_broadcast,
	event_broadcastandwait
};